<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bawei.mapper.BlogMapper" >
  <resultMap id="BaseResultMap" type="com.bawei.entity.Blog" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="created" property="created" jdbcType="TIMESTAMP" />
    <result column="author" property="author" jdbcType="VARCHAR" />
    <result column="tid" property="tid" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.bawei.entity.Blog" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, title, created, author, tid
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  
  
  <select id="selectList" resultType="map">
  
select  b.*,t.tname from blog b LEFT JOIN blog_type t on b.tid =t.tid

  <where>
    <if test="title!=null and title!=''">
       b.title like "%"#{title}"%"
    
    
    </if>
  
  
  </where>
  
  </select>
  
  
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from blog
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from blog
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.bawei.entity.Blog" >
    insert into blog (id, title, created, 
      author, tid, content
      )
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{created,jdbcType=TIMESTAMP}, 
      #{author,jdbcType=VARCHAR}, #{tid,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bawei.entity.Blog" >
    insert into blog
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="title != null" >
        title,
      </if>
        <if test="pic != null" >
        pic,
      </if>
    
        created,
    
      <if test="author != null" >
        author,
      </if>
      <if test="tid != null" >
        tid,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
       <if test="pic != null" >
        #{pic,jdbcType=VARCHAR},
      </if>
        now(),
      <if test="author != null" >
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="tid != null" >
        #{tid,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bawei.entity.Blog" >
    update blog
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
    
        created = now(),
      <if test="author != null" >
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="tid != null" >
        tid = #{tid,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.bawei.entity.Blog" >
    update blog
    set title = #{title,jdbcType=VARCHAR},
      created = now(),
      author = #{author,jdbcType=VARCHAR},
      tid = #{tid,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bawei.entity.Blog" >
    update blog
    set title = #{title,jdbcType=VARCHAR},
      created = #{created,jdbcType=TIMESTAMP},
      author = #{author,jdbcType=VARCHAR},
      tid = #{tid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>